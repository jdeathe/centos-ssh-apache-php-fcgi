COLOUR_NEGATIVE='\033[1;31m'
COLOUR_POSITIVE='\033[1;32m'
COLOUR_RESET='\033[0m'

DOCKER_USER=jdeathe
DOCKER_IMAGE_NAME=centos-ssh-apache-php-fcgi
DOCKER_IMAGE_TAG=${DOCKER_IMAGE_TAG:-latest}
DOCKER_IMAGE_REPOSITORY_NAME=${DOCKER_USER}/${DOCKER_IMAGE_NAME}:${DOCKER_IMAGE_TAG}

SERVICE_UNIT_NAME=${SERVICE_UNIT_NAME:-apache-php}
SERVICE_UNIT_APP_GROUP=${SERVICE_UNIT_APP_GROUP:-app-1}
SERVICE_UNIT_SHARED_GROUP=${SERVICE_UNIT_SHARED_GROUP:-app-1}
SERVICE_UNIT_LOCAL_ID=${SERVICE_UNIT_LOCAL_ID:-1}
SERVICE_UNIT_INSTANCE=${SERVICE_UNIT_INSTANCE:-1}

SERVICE_UNIT_LONG_NAME=${SERVICE_UNIT_NAME}.${SERVICE_UNIT_SHARED_GROUP}.${SERVICE_UNIT_LOCAL_ID}.${SERVICE_UNIT_INSTANCE}
SERVICE_UNIT_TEMPLATE_NAME=${SERVICE_UNIT_NAME}.${SERVICE_UNIT_SHARED_GROUP}@.service
SERVICE_UNIT_INSTANCE_NAME=${SERVICE_UNIT_NAME}.${SERVICE_UNIT_SHARED_GROUP}@${SERVICE_UNIT_LOCAL_ID}.${SERVICE_UNIT_INSTANCE}.service
SERVICE_UNIT_REGISTER_TEMPLATE_NAME=${SERVICE_UNIT_NAME}.${SERVICE_UNIT_SHARED_GROUP}.register@.service
SERVICE_UNIT_REGISTER_INSTANCE_NAME=${SERVICE_UNIT_NAME}.${SERVICE_UNIT_SHARED_GROUP}.register@${SERVICE_UNIT_LOCAL_ID}.${SERVICE_UNIT_INSTANCE}.service

DOCKER_NAME=${SERVICE_UNIT_LONG_NAME}
DOCKER_PORT_MAP_TCP_22=
DOCKER_PORT_MAP_TCP_80=8080
DOCKER_PORT_MAP_TCP_443=9443
DOCKER_PORT_MAP_TCP_8443=8580
DOCKER_PORT_MAP_TCP_9000=

# VOLUME_CONFIG_NAME=volume-config.${SERVICE_UNIT_NAME}
# VOLUME_CONFIG_NAME=volume-config.${SERVICE_UNIT_NAME}.${SERVICE_UNIT_SHARED_GROUP}
VOLUME_CONFIG_NAME=volume-config.${DOCKER_NAME}

# VOLUME_DATA_NAME=volume-data.${SERVICE_UNIT_NAME}.${SERVICE_UNIT_SHARED_GROUP}
VOLUME_DATA_NAME=volume-data.${DOCKER_NAME}

# Use of a configuration volume requires additional maintenance and access to the
# filesystem of the docker host so is disabled by default.
VOLUME_CONFIG_ENABLED=false

# Using named volumes allows for easier identification of files located in
# /var/lib/docker/volumes/ on the docker host. If set to true, the value of
# VOLUME_CONFIG_NAME is used in place of an automatically generated ID.
# NOTE: When using named volumes you need to copy the contents of the directory
# into the configuration "data" volume container.
VOLUME_CONFIG_NAMED=false

# Use a separate data volume container.
# NOTE: For database data to persist you need to either use a named data volume
# container or a named volume.
VOLUME_DATA_ENABLED=false

# Using named volumes allows for easier identification of files located in
# /var/lib/docker/volumes/ on the docker host. If set to true, the value of
# VOLUME_DATA_NAME is used in place of an automatically generated ID.
VOLUME_DATA_NAMED=true

# Application configuration
APACHE_LOAD_MODULES_DEFAULT="
 authz_user_module
 log_config_module
 expires_module
 deflate_module
 headers_module
 setenvif_module
 mime_module
 status_module
 dir_module
 alias_module
"

APACHE_CONTENT_ROOT=/var/www/app
APACHE_CUSTOM_LOG_FORMAT=combined
APACHE_CUSTOM_LOG_LOCATION=${APACHE_CONTENT_ROOT}/var/log/apache_access_log
APACHE_ERROR_LOG_LOCATION=${APACHE_CONTENT_ROOT}/var/log/apache_error_log
APACHE_ERROR_LOG_LEVEL=warn
APACHE_EXTENDED_STATUS_ENABLED=false
APACHE_LOAD_MODULES="${APACHE_LOAD_MODULES_DEFAULT}"
APACHE_OPERATING_MODE=production
APACHE_MOD_SSL_ENABLED=false
APACHE_PUBLIC_DIRECTORY=public_html
APACHE_RUN_GROUP=app-www
APACHE_RUN_USER=app-www
APACHE_SERVER_ALIAS=app-1
APACHE_SERVER_NAME=app-1.local
APACHE_SYSTEM_USER=app
HTTPD=/usr/sbin/httpd.worker
PHP_OPTIONS_DATE_TIMEZONE=UTC
SERVICE_UID=${SERVICE_UNIT_APP_GROUP}.${SERVICE_UNIT_LOCAL_ID}.${SERVICE_UNIT_INSTANCE}

# Linked container
DOCKER_LINK_NAME_DB_MYSQL=mysql.pool-1.1.1
DOCKER_LINK_ID_DB_MYSQL=db_mysql
