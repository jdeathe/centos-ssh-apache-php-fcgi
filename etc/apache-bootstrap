#!/usr/bin/env bash

source /etc/apache-bootstrap.conf

get_password ()
{
	echo $(head -n 4096 /dev/urandom | tr -cd '[:alnum:]' | head -c ${1})
}

OPTS_SERVICE_USER="${SERVICE_USER:-app}"
OPTS_SERVICE_USER_GROUP="${SERVICE_USER_GROUP:-app-www}"
OPTS_SERVICE_USER_PASSWORD="${SERVICE_USER_PASSWORD:-$(get_password 8)}"
OPTS_SERVICE_USER_GROUP_PASSWORD="${SERVICE_USER_GROUP_PASSWORD:-$(get_password 8)}"
OPTS_SUEXECUSERGROUP="${SUEXECUSERGROUP:-false}"

OPTS_APACHE_SERVER_NAME="${APACHE_SERVER_NAME:-$(hostname)}"
OPTS_APACHE_MOD_SSL_ENABLED="${APACHE_MOD_SSL_ENABLED:-false}"

if [[ ! -d ${APP_HOME_DIR} ]] && [[ -d ${APP_HOME_DIR_TEMPLATE} ]]; then
	echo Recreate the ${APP_HOME_DIR} directory...
	mkdir -p ${APP_HOME_DIR}
fi

if [[ ! -n $(find ${APP_HOME_DIR} -maxdepth 1 -type f) ]] && [[ -d ${APP_HOME_DIR_TEMPLATE} ]]; then
	echo Home directory ${APP_HOME_DIR} exists but is empty - populate it using ${APP_HOME_DIR_TEMPLATE}...
	cp -rf ${APP_HOME_DIR_TEMPLATE}/. ${APP_HOME_DIR}/
fi

# Document root directory is required
if [[ ! -d ${APP_HOME_DIR}/public_html ]]; then
	echo ERROR: ${APP_HOME_DIR}/public_html not found.
	exit 1
fi

# If users need to change the vhost.conf the SSL version can be rebuilt if it is deleted
if [[ ${OPTS_APACHE_MOD_SSL_ENABLED} == "true" ]] && [[ ! -f ${APP_HOME_DIR}/vhost-ssl.conf ]] && [[ -f ${APP_HOME_DIR}/vhost.conf ]]; then
	echo Rebuilding the SSL VirtualHost configuration...
	cp -pf ${APP_HOME_DIR}/vhost.conf ${APP_HOME_DIR}/vhost-ssl.conf

	# Enable the SSL VirtualHosts configuration
	sed -i \
		-e 's~^<VirtualHost \*:80>$~#<VirtualHost \*:80>~g' \
		-e 's~^#<VirtualHost \*:443>$~<VirtualHost \*:443>~g' \
		-e 's~#SSLEngine \(.*\)$~SSLEngine \1~g' \
		-e 's~#SSLOptions \(.*\)$~SSLOptions \1~g' \
		-e 's~#SSLProtocol \(.*\)$~SSLProtocol \1~g' \
		-e 's~#SSLCipherSuite \(.*\)$~SSLCipherSuite \1~g' \
		-e 's~#SSLCertificateFile \(.*\)$~SSLCertificateFile \1~g' \
		-e 's~#SSLCertificateKeyFile \(.*\)$~SSLCertificateKeyFile \1~g' \
		${APP_HOME_DIR}/vhost-ssl.conf
fi

# Enable/Disable SSL support
if [[ ${OPTS_APACHE_MOD_SSL_ENABLED} == "true" ]]; then
	echo Enabling SSL support...
	cat /etc/httpd/conf.d/ssl.conf.off > /etc/httpd/conf.d/ssl.conf

	sed -i \
		-e 's~^#NameVirtualHost \*:443$~NameVirtualHost \*:443~g' \
		-e 's~^#Include ${APP_HOME_DIR}/vhost-ssl.conf$~Include ${APP_HOME_DIR}/vhost-ssl.conf~g' \
		/etc/httpd/conf/httpd.conf

	if [[ ! -f /etc/services-config/ssl/private/localhost.key ]] || [[ ! -f /etc/services-config/ssl/certs/localhost.crt ]]; then
		echo Generating new certificate...
		openssl req -x509 -nodes -newkey rsa:4096 \
		-days 365 \
		-subj "/C=--/ST=STATE/L=LOCALITY/O=ORGANIZATION/CN=${OPTS_APACHE_SERVER_NAME}" \
		-keyout /etc/services-config/ssl/private/localhost.key \
		-out /etc/services-config/ssl/certs/localhost.crt
	fi

	openssl x509 -in /etc/services-config/ssl/certs/localhost.crt -text
else
	echo Disabling SSL support...
	> /etc/httpd/conf.d/ssl.conf

	sed -i \
		-e 's~^NameVirtualHost \*:443$~#NameVirtualHost \*:443~g' \
		-e 's~^Include ${APP_HOME_DIR}/vhost-ssl.conf$~#Include ${APP_HOME_DIR}/vhost-ssl.conf~g' \
		/etc/httpd/conf/httpd.conf
fi

# Set the service user / service group user
if getent passwd app && [[ ${OPTS_SERVICE_USER} != "app" ]]; then
	usermod -l ${OPTS_SERVICE_USER} app
fi

if getent passwd app-www && [[ ${OPTS_SERVICE_USER_GROUP} != "app-www" ]]; then
	usermod -l ${OPTS_SERVICE_USER_GROUP} app-www
fi

# Set the Apache (run) service user/group
if [[ ${OPTS_SUEXECUSERGROUP} == "true" ]]; then
	sed -i -e "s~^User .*$~User ${OPTS_SERVICE_USER_GROUP}~g" \
		-e "s~^Group .*$~Group ${OPTS_SERVICE_USER_GROUP}~g" /etc/httpd/conf/httpd.conf
	sed -i -e 's~#SuexecUserGroup \(.*\)$~SuexecUserGroup \1~g' ${APP_HOME_DIR}/vhost.conf
	sed -i -e 's~#SuexecUserGroup \(.*\)$~SuexecUserGroup \1~g' ${APP_HOME_DIR}/vhost-ssl.conf
	chown -R 502:502 /var/{www/app-bin,run/mod_fcgid}
else
	sed -i -e "s~^User .*$~User apache~g" \
		-e "s~^Group .*$~Group apache~g" /etc/httpd/conf/httpd.conf
	sed -i -e 's~\([^#]\)SuexecUserGroup \(.*\)$~\1#SuexecUserGroup \2~g' ${APP_HOME_DIR}/vhost.conf
	sed -i -e 's~\([^#]\)SuexecUserGroup \(.*\)$~\1#SuexecUserGroup \2~g' ${APP_HOME_DIR}/vhost-ssl.conf
	chown -R apache:apache /var/{www/app-bin,run/mod_fcgid}
fi

# Update any existing instances of php-wrapper path in the Virtual Host
sed -i -e 's~app/bin/php-wrapper~app-bin/php-wrapper~g' ${APP_HOME_DIR}/vhost.conf
sed -i -e 's~app/bin/php-wrapper~app-bin/php-wrapper~g' ${APP_HOME_DIR}/vhost-ssl.conf

echo Loading Apache modules...
for MODULE in ${APACHE_LOAD_MODULES}
do
	echo " - ${MODULE}"
	sed -i \
		-e "s~^#LoadModule ${MODULE} ~LoadModule ${MODULE} ~g" \
		/etc/httpd/conf/httpd.conf
done

# Set user passwords
echo "${OPTS_SERVICE_USER}:${OPTS_SERVICE_USER_PASSWORD}" | chpasswd
echo "${OPTS_SERVICE_USER_GROUP}:${OPTS_SERVICE_USER_GROUP_PASSWORD}" | chpasswd

	cat <<-EOT

		================================================================================
		Apache Credentials
		--------------------------------------------------------------------------------
		${OPTS_SERVICE_USER} : ${OPTS_SERVICE_USER_PASSWORD}
		${OPTS_SERVICE_USER_GROUP} : ${OPTS_SERVICE_USER_GROUP_PASSWORD}
		--------------------------------------------------------------------------------
		
	EOT

exit 0